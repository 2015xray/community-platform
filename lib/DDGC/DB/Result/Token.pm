package DDGC::DB::Result::Token;use DBIx::Class::Candy -components => [ 'TimeStamp', 'InflateColumn::DateTime', 'InflateColumn::Serializer', 'SingletonRows', 'EncodedColumn' ];table 'token';column id => {	data_type => 'bigint',	is_auto_increment => 1,};primary_key 'id';column token => {	data_type => 'text',	is_nullable => 0,};column snippet => {	data_type => 'tinyint',	is_nullable => 0,	default_value => 1,};column data => {	data_type => 'text',	is_nullable => 1,	serializer_class => 'YAML',};column notes => {	data_type => 'text',	is_nullable => 1,};column token_context_id => {	data_type => 'bigint',	is_nullable => 1,};column created => {	data_type => 'timestamp with time zone',	set_on_create => 1,};column updated => {	data_type => 'timestamp with time zone',	set_on_create => 1,	set_on_update => 1,};belongs_to 'token_context', 'DDGC::DB::Result::Token::Context', 'token_context_id';has_many 'token_screens', 'DDGC::DB::Result::Token::Screen', 'token_id';use overload '""' => sub {	my $self = shift;	return 'Token #'.$self->id;}, fallback => 1;1;